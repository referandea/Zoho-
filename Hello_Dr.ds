/*
 * Author       : karthikthetester
 * Generated on : 03-Sep-2022 12:04:40
 * Version      : 1.0
 */
 application "Hello Dr"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
	section Doctor_Details
	{
		displayname= "Doctor Details"
		icon = "health-bag-49"
		form Doctor_details
		{
			displayname = "Doctor details"
			success message = "Doctor Detail Added Successfully"
			field alignment = left
			Section1
			(
				type = section
				displayname = ""
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Dr"
	     			 value = {"Dr."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="MBBS"
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
	     			 visibility = false
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have DOB
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Registration_No
			(
    			type = text
				displayname = "Registration No"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have specialization
			(
				type = list	
				displayname = "Specialization"
				values = {"Allergists/Immunologists", "Anesthesiologists", "Cardiologists"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Fess
			(
				type = INR
				format = commadotindian
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Photo
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Auto
			(
				type = section
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			Sign
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 2
	 			column = 1   
				width = medium
			)
			Working_Hours
			(
				type = grid
				must have Days
				(
					type = picklist
					maxchar = 100
					values = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"}
					width = medium
				)
				must have From
				(
					type = picklist
					maxchar = 100
					values = {"08:45 AM", "09:00 AM", "09:15 AM", "09:30 AM", "09:45 AM", "10:00 AM", "10:15 AM", "10:30 AM", "10:45 AM", "11:00 AM", "11:15 AM", "11:30 AM", "11:45 AM", "12:00 PM", "12:15 PM", "12:30 PM", "12:45 PM", "01:00 PM", "01:15 PM", "01:30 PM", "01:45 PM", "02:00 PM", "02:15 PM", "02:30 PM", "02:45 PM", "03:00 PM", "03:15 PM", "03:30 PM", "03:45 PM", "04:00 PM", "04:15 PM", "04:30 PM", "04:45 PM", "05:00 PM", "05:15 PM", "05:30 PM", "05:45 PM", "06:00 PM", "06:15 PM", "06:30 PM", "06:45 PM", "07:00 PM", "07:15 PM", "07:30 PM", "07:45 PM", "08:00 PM", "08:15 PM", "08:30 PM", "08:45 PM", "09:00 PM", "09:15 PM", "09:30 PM", "09:45 PM", "10:00 PM", "10:15 PM", "10:30 PM", "10:45 PM", "11:00 PM", "11:15 PM", "11:30 PM", "11:45 PM", "12:00 AM", "12:15 AM", "12:30 AM", "12:45 AM", "01:00 AM", "01:15 AM", "01:30 AM", "01:45 AM", "02:00 AM", "02:15 AM", "02:30 AM", "02:45 AM", "03:00 AM", "03:15 AM", "03:30 AM", "03:45 AM", "04:00 AM", "04:15 AM", "04:30 AM", "04:45 AM", "05:00 AM", "05:15 AM", "05:30 AM", "05:45 AM", "06:00 AM", "06:15 AM", "06:30 AM", "06:45 AM", "07:00 AM", "07:15 AM", "07:30 AM", "07:45 AM", "08:00 AM", "08:15 AM", "08:30 AM"}
					width = medium
				)
				must have To
				(
					type = picklist
					maxchar = 100
					values = {"12:00 AM", "12:15 AM", "12:30 AM", "12:45 AM", "01:00 AM", "01:15 AM", "01:30 AM", "01:45 AM", "02:00 AM", "02:15 AM", "02:30 AM", "02:45 AM", "03:00 AM", "03:15 AM", "03:30 AM", "03:45 AM", "04:00 AM", "04:15 AM", "04:30 AM", "04:45 AM", "05:00 AM", "05:15 AM", "05:30 AM", "05:45 AM", "06:00 AM", "06:15 AM", "06:30 AM", "06:45 AM", "07:00 AM", "07:15 AM", "07:30 AM", "07:45 AM", "08:00 AM", "08:15 AM", "08:30 AM", "08:45 AM", "09:00 AM", "09:15 AM", "09:30 AM", "09:45 AM", "10:00 AM", "10:15 AM", "10:30 AM", "10:45 AM", "11:00 AM", "11:15 AM", "11:30 AM", "11:45 AM", "12:00 PM", "12:15 PM", "12:30 PM", "12:45 PM", "01:00 PM", "01:15 PM", "01:30 PM", "01:45 PM", "02:00 PM", "02:15 PM", "02:30 PM", "02:45 PM", "03:00 PM", "03:15 PM", "03:30 PM", "03:45 PM", "04:00 PM", "04:15 PM", "04:30 PM", "04:45 PM", "05:00 PM", "05:15 PM", "05:30 PM", "05:45 PM", "06:00 PM", "06:15 PM", "06:30 PM", "06:45 PM", "07:00 PM", "07:15 PM", "07:30 PM", "07:45 PM", "08:00 PM", "08:15 PM", "08:30 PM", "08:45 PM", "09:00 PM", "09:15 PM", "09:30 PM", "09:45 PM", "10:00 PM", "10:15 PM", "10:30 PM", "10:45 PM", "11:00 PM", "11:15 PM", "11:30 PM", "11:45 PM"}
					width = medium
				)
	 			row = 3
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "health-bag-49"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Doctor_Details
		{
			displayName = "All Doctor Details"
			show all rows from Doctor_details    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				DOB
				Photo
				Email
				Fess
				specialization as "Specialization"
				Working_Hours.Days as "Working_Hours"
				Registration_No as "Registration No"
				Sign
				ID
			)
			options
			(
				icon = "sport-cardio"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Phone_Number as "Phone"
							Address
							DOB
							Photo
							Email
							Fess
							ID
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Phone_Number as "Phone"
							Address
							DOB
							Photo
							Email
							Fess
							specialization as "Specialization"
							Working_Hours.Days as "Working_Hours"
							Registration_No as "Registration No"
							Sign
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Patients
	{
		icon = "food-candy"
		form patients
		{
			displayname = "Patients Offline Booking"
			success message = "Patient Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.", "Mrs.", "Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have DOB_patients
			(
    			type = date
				displayname = "DOB"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Sex
			(
				type = radiobuttons
				maxchar = 100
				values = {"Male", "Female", "Others"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Age
			(
    			type = formula
				value =  (((zoho.currentdate - input.DOB_patients)) / (1000 * 3600 * 24 * 365)).round(0).toNumber()
				visibility = false
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Appointment_Date_Time
			(
    			type = datetime
				displayname = "Appointment Date Time"
				initial value = "01-Sep-2022 12:14:00"
				mins_displayinterval = 15
				timedisplayoptions = "hh:mm"
				alloweddays = 0,1,2,3,4,5,6
				allowedhours = 06:00-21:00		
	 			row = 1
	 			column = 1   
				width = medium
			)
			Time_upto
			(
    			type = datetime
				displayname = "Time upto"
				initial value = "02-Sep-2022 09:45:00"
				mins_displayinterval = 15
				timedisplayoptions = "hh:mm"
				alloweddays = 0,1,2,3,4,5,6
				allowedhours = 06:00-21:00		
	 			row = 1
	 			column = 1   
				width = medium
			)
			Booking_id
			(
    			type = autonumber
				displayname = "Booking id "
				start index = 1000
	 			row = 1
	 			column = 1   
				width = medium
			)
			Doctor_details
			(
				type = picklist	
				displayname = "Doctor details"
				values  = Doctor_details.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			Time
			(
    			type = plaintext
				value = "<div> <br /></div>"
	 			row = 1
	 			column = 2   
				width = medium
			)
	
			customize
			(
				icon = "food-candy"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Patients
		{
			displayName = "All Patients"
			show all rows from patients    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
				DOB_patients as "DOB"
				Age
				Sex
				Appointment_Date_Time as "Appointment Date Time"
				Time_upto as "Time upto"
				Booking_id as "Booking id "
				Doctor_details as "Doctor details"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							DOB_patients as "DOB"
							Age
							Sex
							Appointment_Date_Time as "Appointment Date Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							DOB_patients as "DOB"
							Age
							Sex
							Appointment_Date_Time as "Appointment Date Time"
							Time_upto as "Time upto"
							Booking_id as "Booking id "
							Doctor_details as "Doctor details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		timeline Today_Appointments
		{
			displayName = "Today Appointments"
			show all rows from patients    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
				DOB_patients as "DOB"
				Sex
				Age
				Appointment_Date_Time as "Appointment Date Time"
				Time_upto as "Time upto"
				Booking_id as "Booking id "
				Doctor_details as "Doctor details"
			)
			options
			(
				display type = week
				week start day = sunday
				display field = Doctor_details
				start date = Appointment_Date_Time
				end date = Time_upto
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "ui-1-calendar-grid-61"
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Name
							DOB_patients as "DOB"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							DOB_patients as "DOB"
							Sex
							Age
							Appointment_Date_Time as "Appointment Date Time"
							Time_upto as "Time upto"
							Booking_id as "Booking id "
							Doctor_details as "Doctor details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Online_Consultation
	{
		displayname= "Online Consultation"
		icon = "shopping-stock"
		form Booking
		{
			success message = "Booking Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.", "Mrs.", "Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Symptom
			(
				type = list	
				displayname = "Symptoms"
				values = {"Cough", "difficulty breathing", "Fatigue", "Headache", "Sore throat", "Diarrhea"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Payment
			(
				type = number
				displayname = "Payment "
	 			row = 1
	 			column = 1   
				width = medium
			)
			Apply_Coupon_Code
			(
    			type = text
				displayname = "Apply Coupon Code"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Sex
			(
				type = radiobuttons
				maxchar = 100
				values = {"Male", "Female", "Others"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 2   
				width = medium
				personal data = true
			)
			Doctor_details
			(
				type = picklist	
				displayname = "Doctor details"
				values  = Doctor_details.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				searchable = true
				sortorder = ascending
	 			row = 1
	 			column = 2   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div> <br /></div>"
	 			row = 1
	 			column = 2   
				width = medium
			)
			Admin_only
			(
				type = section
				displayname = "Admin only"
	 			row = 2
	 			column = 0   
				width = medium
			)
			status
			(
				type = picklist
				maxchar = 100
				values = {"Requested", "Cancelled", "Attending", "Done"}
				initial value = "Requested"
	 			row = 2
	 			column = 1   
				width = medium
			)
			Date_field
			(
    			type = text
				displayname = "Date"
	 			row = 2
	 			column = 1   
				width = medium
			)
			docEmail
			(
    			type = email
				maxchar = 80
	 			row = 2
	 			column = 1   
				width = medium
				personal data = true
			)
			Prescription
			(
				type = picklist
				maxchar = 100
				values = {"Not Yet", "Created", "Shared"}
				initial value = "Not Yet"
	 			row = 2
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "media-1-ticket-75"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
			blueprint components
			{
				stages = {"Book an Appointment", "Doctor Attending patient", "Done", "Doctor  Attending patient", "Lab Test"}
			}
		}
		default list All_Bookings
		{
			displayName = "All Bookings"
			show all rows from Booking    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
				Symptom as "Symptoms"
				Sex
				status
				Doctor_details as "Doctor details"
				Date_field as "Date"
				docEmail
				Prescription
				Payment as "Payment "
				Apply_Coupon_Code as "Apply Coupon Code"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Symptom as "Symptoms"
							Sex
							status
							Doctor_details as "Doctor details"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Phone_Number as "Phone"
							Email
							Symptom as "Symptoms"
							Sex
							status
							Doctor_details as "Doctor details"
							Date_field as "Date"
							docEmail
							Prescription
							Payment as "Payment "
							Apply_Coupon_Code as "Apply Coupon Code"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		timeline Today
		{
			displayName = "Today"
			show all rows from Booking    
			(
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Sex
				Symptom as "Symptoms"
				Modified_Time as "Modified Time"
				Added_Time as "Added Time"
				Doctor_details as "Doctor details"
			)
			options
			(
				display type = week
				week start day = sunday
				display field = Doctor_details
				start date = Added_Time
				end date = Modified_Time
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "business-progress"
			)
			conditional formatting
			(
				"New Formatting"
				{
				condition = (docEmail == "zoho.loginuserid ")
				format = ""
				}
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Sex
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 2
					datablock1
					(
			 			layout type = -2
		     			title = "Overview"
						fields
						(
							Phone_Number as "Phone"
							Email
							Sex
							Symptom as "Symptoms"
							Modified_Time as "Modified Time"
							Name
							Added_Time as "Added Time"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Status
		{
			displayName = "Status"
			show all rows from Booking    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Symptom as "Symptoms"
				Sex
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				status
				custom action "Attending "
				(
	  			workflow = Change_Status
				show action in edit record menu = true
				column header = "Attending "
				condition = (status == "Requested")
				)
				custom action "close "
				(
	  			workflow = close_consulation
				show action in edit record menu = true
				column header = "close "
				)
				custom action "Prescription"
				(
	  			workflow = Prescription_status
				show action in edit record menu = true
				column header = "Prescription"
				)
				custom action "Prescription done"
				(
	  			workflow = status_change
				show action in edit record menu = true
				column header = "Prescription done"
				)
			)
			options
			(
				icon = "health-heartbeat-16"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Email
							Symptom as "Symptoms"
							Sex
							Phone_Number as "Phone"
							status
				"Attending "
				"close "
				"Prescription"
				"Prescription done"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Email
							Symptom as "Symptoms"
							Sex
							Phone_Number as "Phone"
							status
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		kanban Status1
		{
			displayName = "Prescription Status"
			show all rows from Booking    
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Symptom as "Symptoms"
				Payment as "Payment "
				Apply_Coupon_Code as "Apply Coupon Code"
				Sex
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Doctor_details as "Doctor details"
				status
				Date_field as "Date"
				docEmail
				Prescription
			)
			options
			(
	 			display field = Prescription
				record count  = enable
				icon = "health-heartbeat-16"
	 		)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
						fields
						(
							Name
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Email
							Symptom as "Symptoms"
							Payment as "Payment "
							Apply_Coupon_Code as "Apply Coupon Code"
							Sex
							Phone_Number as "Phone"
							Doctor_details as "Doctor details"
							status
							Date_field as "Date"
							docEmail
							Prescription
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Online_patient
		{
			displayName = "Online patient"
			show all rows from Booking  [Email == zoho.loginuserid]  
			(
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Email
				Symptom as "Symptoms"
				Payment as "Payment "
				Apply_Coupon_Code as "Apply Coupon Code"
				Sex
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Doctor_details as "Doctor details"
				status
				Date_field as "Date"
				docEmail
				Prescription
			)
			options
			(
				icon = "business-net"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Email
							Symptom as "Symptoms"
							Payment as "Payment "
							Sex
							Phone_Number as "Phone"
							Doctor_details as "Doctor details"
							status
							docEmail
							Date_field as "Date"
							Prescription
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Name
							Email
							Symptom as "Symptoms"
							Payment as "Payment "
							Apply_Coupon_Code as "Apply Coupon Code"
							Sex
							Phone_Number as "Phone"
							Doctor_details as "Doctor details"
							status
							Date_field as "Date"
							docEmail
							Prescription
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Reports
	{
		icon = "business-laptop-71"
		form Reports
		{
			success message = "Report Added Successfully"
			field alignment = left
	
			customize
			(
				icon = "business-laptop-71"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Reports
		{
			displayName = "All Reports"
			show all rows from Reports    
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Lab_Tests
	{
		displayname= "Lab Tests"
		icon = "health-flask"
		form Lab_test
		{
			displayname = "Lab test"
			success message = "Lab Test Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Patient_Name
			(
				type = picklist	
				displayname = "Patient Name"
				values  = Patient1.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Collection_Date
			(
    			type = date
				displayname = "Collection Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Doctor_details
			(
				type = picklist	
				displayname = "Doctor details"
				values  = Doctor_details.ID
    			displayformat = [Name.prefix + Name.first_name + " - " + Name.last_name + " - " + Name.suffix]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Type_of_test
			(
				type = list	
				displayname = "Type of test"
				values = {"Liver Function", "COVID-RTPCR", "ECG", "X-Ray", "MRI Brain", "CECT Whole Abdomen", "USG Whole Abdomen", "Blood Test", "Heart", "Urine"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Age
			(
    			type = text
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Date_field
			(
    			type = date
				displayname = "Date"
				initial value = "${zoho.currentdate}"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Report_Date
			(
    			type = date
				displayname = "Report Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			sex
			(
				type = radiobuttons
				displayname = "Sex"
				maxchar = 100
				values = {"Male", "Female", "Others"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Report_Status
			(
				type = picklist
				displayname = "Report Status "
				maxchar = 100
				values = {"Final Report", "Semi Report"}
				initial value = "Semi Report"
	 			row = 1
	 			column = 2   
				width = medium
			)
			File_upload
			(
    			type = upload file
				displayname = "File upload"
				browse = local_drive
	 			row = 1
	 			column = 2   
				width = medium
			)
			Complete_Blood_Count
			(
				type = grid
				displayname = "Complete Blood Count"
				Complete_Blood_Count
				(
    				type = text
					displayname = "Hemoglobin"
					width = medium
				)
				RBC
				(
    				type = text
					width = medium
				)
				HCT
				(
    				type = text
					width = medium
				)
				MCV
				(
    				type = text
					width = medium
				)
				MCH
				(
    				type = text
					width = medium
				)
				MCHC
				(
    				type = text
					width = medium
				)
				RDW_SD
				(
    				type = text
					displayname = "RDW-SD"
					width = medium
				)
				RDW_CV
				(
    				type = text
					displayname = "RDW-CV"
					width = medium
				)
				Total_Leucocyte_Count
				(
    				type = text
					displayname = "Total Leucocyte Count"
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
			Differential_Leucocyte_Count
			(
				type = grid
				displayname = "Differential Leucocyte Count"
				Neutrophils
				(
    				type = text
					width = medium
				)
				Lymphocytes
				(
    				type = text
					width = medium
				)
				Monocytes
				(
    				type = text
					width = medium
				)
				Eosinophils
				(
    				type = text
					width = medium
				)
				Basophils
				(
    				type = text
					width = medium
				)
	 			row = 3
	 			column = 1   
				width = medium
			)
			Absolute_Leucocyte_Count
			(
				type = grid
				displayname = "Absolute Leucocyte Count"
				Absolute_Neutrophil_Count
				(
    				type = text
					displayname = "Absolute Neutrophil Count"
					width = medium
				)
				Absolute_Lymphocyte_Count
				(
    				type = text
					displayname = "Absolute Lymphocyte Count"
					width = medium
				)
				Absolute_Monocyte_Count
				(
    				type = text
					displayname = "Absolute Monocyte Count"
					width = medium
				)
				Absolute_Eosinophil_Count
				(
    				type = text
					displayname = "Absolute Eosinophil Count"
					width = medium
				)
				Absolute_Basophil_Count
				(
    				type = text
					displayname = "Absolute Basophil Count"
					width = medium
				)
				Platelet_Count
				(
    				type = text
					displayname = "Platelet Count"
					width = medium
				)
	 			row = 4
	 			column = 1   
				width = medium
			)
			Common1
			(
				type = grid
				displayname = "Common"
				MPV
				(
    				type = text
					width = medium
				)
				PDW
				(
    				type = text
					width = medium
					isephi = true
					isencrypted = true
				)
	 			row = 5
	 			column = 1   
				width = medium
			)
			Staff_Sign
			(
				type = section
				displayname = "Staff Sign"
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Date_field1
			(
    			type = date
				displayname = "Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 6
	 			column = 1   
				width = medium
			)
			Signature
			(
    			type = signature
	 			row = 6
	 			column = 2   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "health-flask"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				asdad
				{
						content = {"layout":"1","pageNumberOption":null,"orientation":"portrait","images":[{"fileName":"1661741647575_rx-icon-25472.png","imageId":"img_146538","imageType":"upload","fileId":"2509464000000002015"}],"isFooterEnabled":false,"containerStyle":"","mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"u_elem_26842","elemStyle":"background-color: rgb(245, 245, 245); padding: 10px 10px 0 10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"7,93","id":"u_elem_268565","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_2685730000000028","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_26857600000000093","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}},{"type":"image","element":{"imageId":"img_146538","size":"NONE","src":"https://creator.zoho.in/appbuilder/karthikthetester/dr/downLoadImage?imgFileId=2509464000000002015&imgFileName=1661741647575_rx-icon-25472.png","captionMargin":"0px auto","alt":"","caption":"","id":"u_elem_26857700000000186","align":"left","elemStyle":"border: 0px solid rgb(169, 169, 169); margin-top: 5px; width: 124px; padding-left: 6px","formCompId":""}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2685780000000028","fields":[],"content":"<div style=\"\"> \n   <br /> \n  <\/div>"}},{"type":"text","element":{"id":"u_elem_26858100000000093","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"91,9","id":"u_elem_26858100000000093","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26859","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n   <br /> \n  <\/div>"}},{"type":"text","element":{"id":"u_elem_26859100000000093","fields":[],"content":"<div style=\"\"> \n   <p style=\"text-align: right\"><span\n        style=\"font-size: medium; letter-spacing: 0px\"><font\n        color=\"#16d0ef\" style=\"\">Hello DR<\/font><\/span><\/p><p\n      style=\"text-align: right\"><span style=\"font-size: medium; letter-spacing: 0px\">4141 Hacienda Drive, Pleasanton, CA, 94588, United States<\/span><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2685930000000028","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]}]}},{"type":"columns","element":{"split":"40,285","id":"u_elem_2685930000000028","elemStyle":"background-color: rgb(240, 240, 240); border-width: 1px 0px 1px 1px; border-style: solid; border-color: rgb(230, 230, 230); padding: 10px","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_101127845","height":"184"}}]},{"colElements":[{"id":"u_elem_9882932100000009","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"1","related_Form":"Patient1","labelText":"Patient Reg","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Patient_Name","refFields":[{"fieldLayoutType":"2","labelText":"Name","Label_Name":"Name"}],"labelTextStyle":""}},{"id":"u_elem_99169715","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Date","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Date_field1","labelTextStyle":""}},{"type":"columns","element":{"split":"100","id":"u_elem_26860200000000186","elemStyle":"","collayouts":[{"colElements":[{"type":"columns","element":{"split":"100","id":"u_elem_9945619","elemStyle":"","collayouts":[{"colElements":[{"id":"u_elem_9945618400000006","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Report Date","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Report_Date","labelTextStyle":""}},{"id":"u_elem_10109711100000009","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Report Status ","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Report_Status","labelTextStyle":""}}]}]}},{"type":"text","element":{"id":"u_elem_26861200000000186","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_26861400000000373","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26861200000000186","fields":[],"content":"<div style=\"\"> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"77,23","id":"u_elem_26861600000000093","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"100","id":"u_elem_2686980000000028","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_268705","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_26871400000000373","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_268715","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_268715","fields":[],"content":"<div style=\"\"> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"74,26","id":"u_elem_26871900000000373","elemStyle":"background-color: rgb(240, 240, 240); border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); padding: 20px 0","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26881200000000186","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2688130000000028","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"74,26","id":"u_elem_26881400000000373","elemStyle":"background-color: rgb(255, 255, 255); padding: 20px 0px","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26883","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2688330000000028","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_26883400000000373","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_2688330000000028","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"3,97","id":"u_elem_26883700000000186","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26890700000000186","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2689080000000028","fields":[],"content":"<div style=\"\"> \n   <p><font size=\"3\"><b>Terms &amp; Conditions<\/b><\/font><\/p> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_26891100000000093","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26891","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_268915","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26891400000000373","fields":[],"content":"<div style=\"\"> \n   <hr style=\"border-color: rgb(240, 240, 240)\" /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_26891600000000093","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_26891600000000093","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <p style=\"text-align: center\"> <font size=\"3\"><b>Notes:<\/b>&nbsp;For any queries, please contact Harry Smith : 00-0000-0000<\/font><\/p> \n   <br /> \n  <\/div>"}}]}]}}],"id":1}],"resize":"A4","themeFont":"lato","templateStyle":"text-align: left; width: 793.7px; margin: 0px; padding: 30px","isHeaderEnabled":false,"version":"2"}
				}
				Lap_Report
				{
						displayname = "Lap Report"
						content = {"pageNumberOption":null,"orientation":"null","images":[{"fileName":"","imageId":"","imageType":"","fileId":""},{"fileName":"null","imageId":"img_18266","imageType":"null","fileId":"null"},{"fileName":"","imageId":"","imageType":"","fileId":""},{"fileName":"1661740549700_iconmonstr-medical-20.png","imageId":"img_10277916200000003","imageType":"upload","fileId":"2509464000000003016"}],"isFooterEnabled":true,"footer":{"imageId":"","elements":[{"type":"columns","element":{"split":"49,2,49","id":"u_elem_10165680","elemStyle":"padding: 0 15px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"100","id":"u_elem_10165684700000003","elemStyle":"padding: 20px; border-width: 1px; border-style: solid; border-color: rgb(203, 203, 203)","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165684800000012","fields":[],"content":"<div style=\"\"> \n   <p style=\"line-height: 1.7\"> <font size=\"3\"> <font\n        style=\"\" color=\"#2d5994\">Notes:<\/font> <br /> <span><font color=\"#333333\">In case of any&nbsp;<\/font><\/span><\/font><\/p> \n  <\/div>"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_10165684800000012","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"100","id":"u_elem_10165684800000012","elemStyle":"padding: 20px; border-width: 1px; border-style: solid; border-color: rgb(203, 203, 203)","collayouts":[{"colElements":[{"type":"columns","element":{"split":"50,50","id":"u_elem_10165684900000006","elemStyle":"padding: 0 15px","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165685900000006","fields":[],"content":"<div style=\"\"> \n   <p> <font size=\"3\"><span style=\"font-weight: 600\">Signature<\/span><\/font> <\/p> \n  <\/div>"}}]},{"colElements":[{"type":"image","element":{"imageId":"img_18266","size":"S","src":"/appbuilder/edit/templates/images/urlprofilebg.png","captionMargin":"0px auto","alt":"","caption":"","Label_Name":"Signature","id":"u_elem_10165685900000006","align":"left","elemStyle":"border: 0px solid rgb(169, 169, 169); margin-right: 10px; width: 150px","formCompId":"139792000000012495"}}]}]}},{"type":"columns","element":{"split":"50,50","id":"u_elem_10165686","elemStyle":"padding: 11px 15px 12px","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165686800000012","fields":[],"content":"<div style=\"\"> \n   <p><span style=\"font-weight: 600\"><font size=\"3\">Checked by<\/font><\/span><\/p> \n  <\/div>"}}]},{"colElements":[{"id":"u_elem_131582997640304298","type":"fields","element":{"Lookup_Label_Name":"Doctor_details","valueStyle":"width: 50%","valueTextStyle":"font-size: 16px","fieldLayoutType":"1","labelText":"Name","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Name","labelTextStyle":"","compFields":["prefix","first_name","last_name","suffix"]}}]}]}},{"type":"columns","element":{"split":"50,50","id":"u_elem_10165686800000012","elemStyle":"padding: 0 15px","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_101656875","fields":[],"content":"<div style=\"\"> \n   <p> <font size=\"3\"><span style=\"font-weight: 600\">Date<\/span><\/font> <\/p> \n  <\/div>"}}]},{"colElements":[{"id":"u_elem_131582997640308194","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"font-size: 16px","fieldLayoutType":"1","labelText":"Report Date","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Report_Date","labelTextStyle":""}}]}]}}]}]}}]}]}}],"style":"display: block; border-color: rgb(255, 255, 255); background-color: rgb(255, 255, 255)","bgImg":""},"containerStyle":"","templateStyle":"text-align: left; width: 793.92px; margin: 0px auto; padding: 0px","version":"2","layout":"1","mainLayout":[{"elements":[{"type":"columns","element":{"split":"100","id":"u_elem_10165663900000006","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165663800000012","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_10165664200000003","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165664","fields":[],"content":"<div style=\"\"> \n   <p\n        style=\"text-align: center; padding: 0px 30px 5px; line-height: 1.8\"><b><font style=\"font-size: 24px\">Lap Test Report<\/font><\/b><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"37,60,3","id":"u_elem_10165664600000009","elemStyle":"","collayouts":[{"colElements":[{"id":"u_elem_131582997640221815","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"1","related_Form":"Patient1","labelText":"Patient Name","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Patient_Name","refFields":[{"valueStyle":"  ","fieldLayoutType":"2","labelText":"Name","labelStyle":"  ","Label_Name":"Name"}],"labelTextStyle":""}},{"id":"u_elem_131582997640236433","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Age","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Age","labelTextStyle":""}},{"id":"u_elem_131582997640238798","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Sex","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"sex","labelTextStyle":""}},{"id":"u_elem_131582997640240625","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","delimiter":"newline","labelText":"Type of test","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Type_of_test","labelTextStyle":""}}]},{"colElements":[{"id":"u_elem_131582997640243118","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Collection Date","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Collection_Date","labelTextStyle":""}},{"id":"u_elem_131582997640244695","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Date","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Date_field","labelTextStyle":""}},{"id":"u_elem_131582997640246499","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Report Date","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Report_Date","labelTextStyle":""}},{"id":"u_elem_131582997640248113","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Record Status","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Record_Status","labelTextStyle":""}},{"type":"text","element":{"id":"u_elem_11846954400000006","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"> \n   <p style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_101656645","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_10165671700000003","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165671700000003","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_10165672100000009","elemStyle":"","collayouts":[{"colElements":[{"id":"u_elem_131582997640251851","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"3","related_Form":"ZC_SUBFORM_15","labelText":"Complete Blood Count","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Complete_Blood_Count","refFields":[{"valueStyle":"        ","fieldLayoutType":"2","labelText":"MCHC","labelStyle":"        ","Label_Name":"MCHC"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"MCH","labelStyle":"        ","Label_Name":"MCH"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Hemoglobin","labelStyle":"        ","Label_Name":"Complete_Blood_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"RDW-CV","labelStyle":"        ","Label_Name":"RDW_CV"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"RDW-SD","labelStyle":"        ","Label_Name":"RDW_SD"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"RBC","labelStyle":"        ","Label_Name":"RBC"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Total Leucocyte Count","labelStyle":"        ","Label_Name":"Total_Leucocyte_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"MCV","labelStyle":"        ","Label_Name":"MCV"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"HCT","labelStyle":"        ","Label_Name":"HCT"}],"labelTextStyle":""}}]}]}},{"type":"columns","element":{"split":"88,12","id":"u_elem_10165672400000006","elemStyle":"padding: 0 30px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"50,50","id":"u_elem_11234046200000003","elemStyle":"","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_11234045800000012","height":"25"}}]},{"colElements":[{"type":"spacer","element":{"id":"u_elem_112309835","height":"25"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_10165678","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_10165679800000012","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165679700000003","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_11272569800000012","elemStyle":"","collayouts":[{"colElements":[{"id":"u_elem_131582997640266230","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"3","related_Form":"ZC_SUBFORM_18","labelText":"COmmon","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Common1","refFields":[{"valueStyle":"        ","fieldLayoutType":"2","labelText":"MPV","labelStyle":"        ","Label_Name":"MPV"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"PDW","labelStyle":"        ","Label_Name":"PDW"}],"labelTextStyle":""}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_11339762900000006","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_11684044900000006","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"> \n   <h1 style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><br /><\/h1> \n  <\/div>"}},{"type":"spacer","element":{"id":"u_elem_11515008900000006","height":"25"}},{"id":"u_elem_131582997640271061","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"3","related_Form":"ZC_SUBFORM_17","labelText":"Absolute Leucocyte Count","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Absolute_Leucocyte_Count","refFields":[{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Absolute Monocyte Count","labelStyle":"        ","Label_Name":"Absolute_Monocyte_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Platelet Count","labelStyle":"        ","Label_Name":"Platelet_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Absolute Basophil Count","labelStyle":"        ","Label_Name":"Absolute_Basophil_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Absolute Eosinophil Count","labelStyle":"        ","Label_Name":"Absolute_Eosinophil_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Absolute Lymphocyte Count","labelStyle":"        ","Label_Name":"Absolute_Lymphocyte_Count"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Absolute Neutrophil Count","labelStyle":"        ","Label_Name":"Absolute_Neutrophil_Count"}],"labelTextStyle":""}},{"type":"spacer","element":{"id":"u_elem_11518179800000012","height":"25"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_11372964400000006","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_11696458800000012","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"> \n   <p style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><br /><\/p> \n  <\/div>"}},{"id":"u_elem_131582997640277679","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"3","related_Form":"ZC_SUBFORM_16","labelText":"Differential Leucocyte Count","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Differential_Leucocyte_Count","refFields":[{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Basophils","labelStyle":"        ","Label_Name":"Basophils"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Neutrophils","labelStyle":"        ","Label_Name":"Neutrophils"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Eosinophils","labelStyle":"        ","Label_Name":"Eosinophils"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Monocytes","labelStyle":"        ","Label_Name":"Monocytes"},{"valueStyle":"        ","fieldLayoutType":"2","labelText":"Lymphocytes","labelStyle":"        ","Label_Name":"Lymphocytes"}],"labelTextStyle":""}}]}]}}],"id":1}],"resize":"A4","header":{"imageId":"","elements":[{"type":"columns","element":{"split":"20,80","id":"u_elem_10165661200000003","elemStyle":"border-width: 0px; border-style: solid; border-color: rgb(45, 89, 148)","collayouts":[{"colElements":[{"type":"image","element":{"imageId":"img_10277916200000003","size":"O","src":"https://creator.zoho.in/appbuilder/karthikthetester/dr/downLoadImage?imgFileId=2509464000000003016&imgFileName=1661740549700_iconmonstr-medical-20.png","captionMargin":"0px auto","alt":"","caption":"","id":"u_elem_10165662700000003","align":"right","elemStyle":"border: 0px solid rgb(169, 169, 169); margin-right: 10px; width: 70px","formCompId":""}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_10165663100000009","fields":[],"content":"<div style=\"\"> \n   <h1 style=\"padding-bottom: 0px\"> <font color=\"#2d5994\">Hello Dr<\/font><\/h1> \n  <\/div>"}},{"type":"text","element":{"id":"u_elem_11561322300000012","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"> \n   <p\n      style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><font\n    style=\"font-size: 12px\"> 5/639, Rajiv Gandhi Salai, Tirumalai Nagar,<\/font><\/p> \n   <p\n      style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><font\n    style=\"font-size: 12px\"><span><span>&nbsp;Perungudi,&nbsp;<\/span><\/span><\/font><\/p> \n   <p\n      style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><font\n        style=\"\"><font style=\"font-size: 12px\">Chennai, Tamil Nadu 600096<\/font> <\/font><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_101656635","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10165663300000012","fields":[],"content":"<div style=\"border-bottom: 1px solid rgb(45, 89, 148); border-top-color: rgb(45, 89, 148); border-right-color: rgb(45, 89, 148); border-left-color: rgb(45, 89, 148)\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}],"style":"display: block; background-color: rgb(255, 255, 255); border-color: rgb(255, 255, 255)","bgImg":""},"themeFont":"lato","isHeaderEnabled":true}
				}
			}
		}
		default list All_Lab_Tests
		{
			displayName = "All Lab Tests"
			print template = Lap_Report
			show all rows from Lab_test    
			(
				File_upload as "File upload"
				Type_of_test as "Type of test"
				Complete_Blood_Count.Complete_Blood_Count as "Complete Blood Count"
				Differential_Leucocyte_Count.Neutrophils as "Differential Leucocyte Count"
				Absolute_Leucocyte_Count.Absolute_Neutrophil_Count as "Absolute Leucocyte Count"
				Common1.MPV as "Common"
				Collection_Date as "Collection Date"
				Age
				Doctor_details as "Doctor details"
				Date_field as "Date"
				Report_Date as "Report Date"
				Report_Status as "Report Status "
				Signature
				Date_field1 as "Date"
				Email
				Patient_Name as "Patient Name"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				sex as "Sex"
			)
			options
			(
				icon = "health-flask"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							File_upload as "File upload"
							Type_of_test as "Type of test"
							Complete_Blood_Count.Complete_Blood_Count as "Complete Blood Count"
							Differential_Leucocyte_Count.Neutrophils as "Differential Leucocyte Count"
							Absolute_Leucocyte_Count.Absolute_Neutrophil_Count as "Absolute Leucocyte Count"
							Common1.MPV as "Common"
							Phone_Number as "Phone"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							File_upload as "File upload"
							Type_of_test as "Type of test"
							Complete_Blood_Count.Complete_Blood_Count as "Complete Blood Count"
							Differential_Leucocyte_Count.Neutrophils as "Differential Leucocyte Count"
							Absolute_Leucocyte_Count.Absolute_Neutrophil_Count as "Absolute Leucocyte Count"
							Common1.MPV as "Common"
							Collection_Date as "Collection Date"
							Age
							Doctor_details as "Doctor details"
							Date_field as "Date"
							Report_Date as "Report Date"
							Report_Status as "Report Status "
							Signature
							Date_field1 as "Date"
							Email
							Patient_Name as "Patient Name"
							Phone_Number as "Phone"
							sex as "Sex"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		timeline Today1
		{
			displayName = "Today"
			show all rows from Lab_test    
			(
				Collection_Date as "Collection Date"
				Doctor_details as "Doctor details"
				Type_of_test as "Type of test"
				Age
				Date_field as "Date"
				Report_Date as "Report Date"
				Report_Status as "Report Status "
				File_upload as "File upload"
				Date_field1 as "Date"
				Signature
			)
			options
			(
				display type = week
				week start day = sunday
				display field = Collection_Date
				start date = Collection_Date
				end date = Report_Date
				default date 
				(
	    			day   = Today
	    			month = Currentmonth
	    			year  = Currentyear
				)
				icon = "business-progress"
			)
			quickview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = 1
					)
				)

				menu
    			(
    	 			header
    	 			(
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Collection_Date as "Collection Date"
							Doctor_details as "Doctor details"
							Type_of_test as "Type of test"
							Age
							Date_field as "Date"
							Report_Date as "Report Date"
							Report_Status as "Report Status "
							File_upload as "File upload"
							Date_field1 as "Date"
							Signature
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Lap_Test_Patient
		{
			displayName = "Lap Test Patient"
			show all rows from Lab_test    
			(
				Patient_Name as "Patient Name"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email
				Collection_Date as "Collection Date"
				Doctor_details as "Doctor details"
				Type_of_test as "Type of test"
				Age
				Date_field as "Date"
				Report_Date as "Report Date"
				sex as "Sex"
				Report_Status as "Report Status "
				File_upload as "File upload"
				Date_field1 as "Date"
				Signature
			)
			options
			(
				icon = "education-flask"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Patient_Name as "Patient Name"
							Phone_Number as "Phone"
							Email
							Type_of_test as "Type of test"
							Collection_Date as "Collection Date"
							Doctor_details as "Doctor details"
							Report_Status as "Report Status "
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Patient_Name as "Patient Name"
							Phone_Number as "Phone"
							Email
							Collection_Date as "Collection Date"
							Doctor_details as "Doctor details"
							Type_of_test as "Type of test"
							Age
							Date_field as "Date"
							Report_Date as "Report Date"
							sex as "Sex"
							Report_Status as "Report Status "
							File_upload as "File upload"
							Date_field1 as "Date"
							Signature
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Diseases
	{
		icon = "food-candy"
		form Disease
		{
			success message = "Disease Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Name_of_the_Disease
			(
    			type = text
				displayname = "Name of the Disease"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Symptom
			(
				type = list	
				displayname = "Symptom "
				values = {"Cough", "difficulty breathing", "Fatigue", "Headache", "Sore throat", "Diarrhea"}
				height = 60px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Specialities
			(
				type = picklist
				maxchar = 100
				values = {"Gynaecology", "Sexology", "General physician", "Dermatology", "Psychiatry", "Stomach and digestion"}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "food-candy"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Diseases
		{
			displayName = "All Diseases"
			show all rows from Disease    
			(
				Specialities
				Symptom as "Symptom "
				Name_of_the_Disease as "Name of the Disease"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Specialities
							Symptom as "Symptom "
							Name_of_the_Disease as "Name of the Disease"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Specialities
							Symptom as "Symptom "
							Name_of_the_Disease as "Name of the Disease"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Prescriptions
	{
		icon = "health-pill-container-47"
		form Prescription
		{
			success message = "Prescription Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Age
			(
				type = picklist	
				values  = patients.ID
    			displayformat = [Age]
				sortorder = ascending
				private = true
	 			row = 1
	 			column = 1   
				width = medium
			)
			Booking_ID
			(
				type = picklist	
				displayname = "Booking ID"
				values  = patients.ID
    			displayformat = [Booking_id]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Date_Time
			(
    			type = datetime
				displayname = "Date-Time"
				initial value = "01-Sep-2022 08:55:00"
				timedisplayoptions = "hh:mm"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Name1
			(
    			type = text
				displayname = "Name"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Age1
			(
    			type = text
				displayname = "Age"
	 			row = 1
	 			column = 2   
				width = medium
			)
			sex
			(
				type = radiobuttons
				maxchar = 100
				values = {"Male", "Female", "Others"}
				initial value = "Male"
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Medicines
			(
				type = grid
				Medication_Name
				(
    				type = text
					displayname = "Medication Name "
					width = medium
				)
				Dosage
				(
    				type = text
					width = medium
				)
				Duration
				(
    				type = text
					width = medium
				)
	 			row = 2
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = ""
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Doctor_name
			(
				type = picklist	
				displayname = "Doctor name"
				values  = Doctor_details.ID
    			displayformat = [" " + Name.prefix + " " + Name.first_name + " " + Name.last_name + " " + Name.suffix]
				sortorder = ascending
	 			row = 3
	 			column = 1   
				width = medium
			)
			REG_No
			(
    			type = text
				displayname = "REG No"
	 			row = 3
	 			column = 1   
				width = medium
			)
			Signature
			(
    			type = signature
	 			row = 3
	 			column = 1   
				width = medium
				personal data = true
			)
	
			customize
			(
				icon = "health-pill-container-47"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		print template
			{
				Prescription
				{
						content = {"layout":"1","pageNumberOption":null,"orientation":"null","images":[{"fileName":"1661741647575_rx-icon-25472.png","imageId":"img_26980296000000015","imageType":"upload","fileId":"2509464000000002015"},{"imageId":"img_2139012000000002","src":"https://toppng.com/uploads/preview/signature-png-115539500690fdntr4lhu.png","imageType":"url"}],"isFooterEnabled":false,"containerStyle":"","mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"u_elem_14549029999999702","elemStyle":"background-color: rgb(245, 245, 245); padding: 10px 10px 0 10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"39,61","id":"u_elem_1455038999999985","elemStyle":"","collayouts":[{"colElements":[{"type":"image","element":{"imageId":"img_26980296000000015","size":"S","src":"https://creator.zoho.in/appbuilder/karthikthetester/dr/downLoadImage?imgFileId=2509464000000002015&imgFileName=1661741647575_rx-icon-25472.png","captionMargin":"0px auto","alt":"","caption":"","id":"u_elem_26907901999999955","align":"left","elemStyle":"border: 0px solid rgb(0, 0, 0); margin: 0px; width: 25px; background: rgba(0, 0, 0, 0)","formCompId":""}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_1455051000000015","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_1455055","fields":[],"content":"<div style=\"\"> \n   <br /> \n  <\/div>"}},{"type":"text","element":{"id":"u_elem_1455056000000015","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"91,9","id":"u_elem_14550579999999702","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_14550769999999553","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n   <br /> \n  <\/div>"}},{"type":"text","element":{"id":"u_elem_145508","fields":[],"content":"<div style=\"\"> \n   <p style=\"text-align: right\"><span><span><b><font\n    size=\"3\">Hello Dr Hospital<\/font><\/b><\/span><\/span><\/p> \n   <p\n          style=\"text-align: right\"><span><span><font size=\"3\" style=\"\">4141 Hacienda Drive, Pleasanton, CA, 94588, United States<br /><\/font><\/span><\/span><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_1455081000000015","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]}]}},{"type":"columns","element":{"split":"20,47,33","id":"u_elem_14550819999999553","elemStyle":"background-color: rgb(240, 240, 240); border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); padding: 10px","collayouts":[{"colElements":[{"id":"u_elem_131582522713324022","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Doctor name","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Doctor_name","labelTextStyle":""}},{"id":"u_elem_131582522713330183","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"REG No","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"REG_No","labelTextStyle":""}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_14550929999999702","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"100","id":"u_elem_1455093999999985","elemStyle":"","collayouts":[{"colElements":[{"id":"u_elem_131582522713333356","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Name","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Name1","labelTextStyle":""}},{"id":"u_elem_131582522713335123","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"Age","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"Age1","labelTextStyle":""}},{"id":"u_elem_131582522713337097","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","labelText":"sex","wrapperStyle":"","labelStyle":"width: 50%","Label_Name":"sex","labelTextStyle":""}},{"type":"text","element":{"id":"u_elem_1455103999999985","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_145521","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_1455208999999985","fields":[],"content":"<div style=\"\"> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"72,2,26","id":"u_elem_14553129999999702","elemStyle":"background-color: rgb(255, 255, 255); padding: 20px 0px","collayouts":[{"colElements":[{"id":"u_elem_131582522713342940","type":"lookupfields","element":{"valueStyle":"width: 90%; text-align: center","valueTextStyle":"font-size: 14px; font-weight: bold","fieldLayoutType":"1","related_Form":"ZC_SUBFORM_22","labelText":"Medicines","wrapperStyle":"","labelStyle":"width: 10%; display: none","Label_Name":"Medicines","refFields":[{"valueStyle":"  ","fieldLayoutType":"2","labelText":"Medication Name","labelStyle":"  ","Label_Name":"Medication_Name"},{"valueStyle":"  ","fieldLayoutType":"2","labelText":"Dosage","labelStyle":"  ","Label_Name":"Dosage"},{"valueStyle":"  ","fieldLayoutType":"2","labelText":"Duration","labelStyle":"  ","Label_Name":"Duration"}],"labelTextStyle":""}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_1455326000000015","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_14553279999999702","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_1455328999999985","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_14553279999999702","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_1455331000000015","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_1455416000000015","fields":[],"content":"<div style=\"\"> \n   <p><br /><\/p> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_14554179999999702","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_14554169999999553","fields":[],"content":"<div style=\"\"> \n   <br /> \n   <br /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_145542","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_145542","fields":[],"content":"<div style=\"\"> \n   <hr style=\"border-color: rgb(240, 240, 240)\" /> \n  <\/div>"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_31316411000000015","elemStyle":"","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_3131640799999997","height":"25"}}]}]}},{"type":"columns","element":{"split":"100","id":"u_elem_31369671999999955","elemStyle":"","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_31791201000000015","height":"26"}}]}]}},{"type":"columns","element":{"split":"62,38","id":"u_elem_22062340000000037","elemStyle":"","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_6940759999999963","height":"195"}}]},{"colElements":[{"type":"text","element":{"id":"u_elem_2206217000000002","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"> \n   <p style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><br /><\/p> \n  <\/div>"}},{"type":"image","element":{"imageId":"img_2139012000000002","size":"M","src":"https://toppng.com/uploads/preview/signature-png-115539500690fdntr4lhu.png","captionMargin":"0px auto","alt":"","caption":"","id":"u_elem_20762590000000037","align":"left","elemStyle":"border: 0px solid rgb(0, 0, 0); margin: 0px; width: 293.364px; background: rgba(0, 0, 0, 0)","formCompId":""}}]}]}},{"type":"columns","element":{"split":"50,25,25","id":"u_elem_31806761000000015","elemStyle":"","collayouts":[{"colElements":[{"type":"spacer","element":{"id":"u_elem_36540190000000596","height":"25"}}]},{"colElements":[{"type":"spacer","element":{"id":"u_elem_31857341000000015","height":"26"}}]},{"colElements":[{"id":"u_elem_131582522713369553","type":"fields","element":{"Lookup_Label_Name":"Doctor_name","valueStyle":"width: 50%; text-align: right","valueTextStyle":"","fieldLayoutType":"1","labelText":"Name","wrapperStyle":"","labelStyle":"width: 50%; display: none","Label_Name":"Name","labelTextStyle":"","compFields":["first_name","last_name","suffix"]}}]}]}}],"id":1}],"resize":"A4","themeFont":"lato","templateStyle":"text-align: left; width: 793.7px; margin: 0px; padding: 30px","isHeaderEnabled":false,"version":"2"}
				}
				sample
				{
						content = {"layout":"1","pageNumberOption":null,"orientation":"null","isFooterEnabled":false,"mainLayout":[{"elements":[{"type":"columns","element":{"split":"34,33,33","id":"elem_16712b537991","elemStyle":"background-color: rgb(245, 245, 245); padding: 10px 10px 0 10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"7,93","id":"elem_167133925f81","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167133925f8","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167593eb7ce","fields":[],"content":"<div style=\"\"><br><br><\/div>"}},{"type":"image","element":{"size":"NONE","src":"https://static.zohocdn.com/creator/appbuilder/images/print-templates/z-logo-green.91cc40399e72c75c2f556d8d09d78ba9.png","captionMargin":"0px auto","alt":"","caption":"","id":"elem_1676e4fe9d6","align":"left","elemStyle":"border: 0px solid rgb(169, 169, 169); margin-top: 5px; width: 124px; padding-left: 6px","formCompID":""}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"elem_16712b99ee1","fields":[],"content":"<div style=\"\"><br><\/div>"}},{"type":"text","element":{"id":"elem_167593e91bf","fields":[],"content":"<div style=\"\"><br><br><\/div>"}},{"type":"text","element":{"id":"elem_16712b53799","fields":[],"content":"<div style=\"\"><p style=\"text-align: center\"><b><font size=\"7\">INVOICE<\/font><\/b><\/p><p><b><font size=\"7\"><br><\/font><\/b><\/p><\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"91,9","id":"elem_167593d91151","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167593e56bb","fields":[],"content":"<div style=\"\"><br> <br>  <br><\/div>"}},{"type":"text","element":{"id":"elem_16712b53f0b","content":"<div style=\"\"><p style=\"text-align: right\"><span><span><b><font size=\"3\">Zylker Inc<\/font><\/b><\/span><\/span><\/p><p style=\"text-align: right\"><span><span><font size=\"3\" style=\"\">4141 Hacienda Drive, Pleasanton, CA, 94588, United States<br><\/font><\/span><\/span><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167593d9116","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]}]}}]}]}},{"type":"columns","element":{"split":"67,33","id":"elem_16712bb59cc1","elemStyle":"background-color: rgb(240, 240, 240); border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); padding: 10px","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_16712bb59cd","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"type":"columns","element":{"split":"91,9","id":"elem_1675943c8581","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_16712bb59cd","content":"<div style=\"\"><p style=\"text-align: right\"><b><font size=\"3\">Balance Due :&nbsp;<span><span>\u20b9 561.75<\/span><\/span><\/font><\/b><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_1675943c858","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]}]}}]}]}},{"type":"text","element":{"id":"elem_16712cc65db","fields":[],"content":"<div style=\"\"><br><\/div>"}},{"type":"columns","element":{"split":"62,36,2","id":"elem_16712cca6341","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"columns","element":{"split":"2,98","id":"elem_167594ebbd11","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167594ebbd1","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"id":"elem_1543830248217","type":"fields","element":{"valueStyle":"width: 50%","valueTextStyle":"font-size: 16px","fieldLayoutType":"6","wrapperStyle":"","labelText":"Bill To","labelStyle":"width: 50%; background-color: rgb(255, 255, 255)","Select_Field":true,"formCompId":"0","labelTextStyle":"font-weight: bold; font-size: 16px"}}]}]}}]},{"colElements":[{"type":"columns","element":{"split":"50,50","id":"elem_16712d5046e1","elemStyle":"padding:10px","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_16712d5046e","fields":[],"content":"<div style=\"\"><p style=\"text-align: right\"><b style=\"font-size: medium\">Invoice Date&nbsp;<\/b><b style=\"font-size: medium\">:<\/b><span><\/span><\/p><p style=\"text-align: right\"><span><span><span><font size=\"3\"><b>Terms<\/b>&nbsp;<span><span><span><span><b>:<\/b><\/span><\/span><\/span><\/span><\/font><\/span><\/span><\/span><\/p><p style=\"text-align: right\"><span><span><span><span><span><span><span><span><span><span><font size=\"3\"><b>Due Date<\/b>&nbsp;<span><span><b>:<\/b><\/span><\/span><\/font><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/p><p style=\"text-align: right\"><font size=\"3\"><b>P.O.#<\/b>&nbsp;<span><b>:<\/b><\/span><\/font><\/p><p style=\"text-align: right\"><font size=\"3\"><b>Project Name&nbsp;<\/b><b>:<\/b><\/font><\/p><p><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_16712d5046e","content":"<div style=\"\"><p style=\"text-align: right\"><font size=\"3\">17-Oct-2018<span><\/span><\/font><\/p><p style=\"text-align: right\"><span><span><span><span><span><span><span><span><span><span><font size=\"3\">Due On Receipt<\/font><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/p><p style=\"text-align: right\"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><font size=\"3\">17-Oct-2020<\/font><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/span><\/p><p style=\"text-align: right\"><span><font size=\"3\">321014<\/font><\/span><\/p><p style=\"text-align: right\"><font size=\"3\">Design Project<\/font><\/p><p style=\"text-align: right\"><\/p><\/div>"}}]}]}}]},{"colElements":[{"type":"text","element":{"id":"elem_16759453e9d","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_16712d6b76b","fields":[],"content":"<div style=\"\"><br><\/div>"}},{"id":"elem_1543830248217","type":"lookupfields","element":{"valueStyle":"width: 50%","valueTextStyle":"","fieldLayoutType":"2","refFormID":"-1","Select_Related_Field":true,"wrapperStyle":"","labelText":"SF2","labelStyle":"width: 50%; display: none","refFields":[{"valueStyle":" text-align: center; border-bottom: 1px solid rgb(240, 240, 240) ","fieldLayoutType":2,"labelText":"#","labelStyle":" width: 7%; text-align: center; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Item","labelStyle":" width: 25%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Description","labelStyle":" width: 30%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Rate","labelStyle":" width: 10%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Qty","labelStyle":" width: 10%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Discount","labelStyle":" width: 9%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"},{"valueStyle":" text-align: left; border-bottom: 1px solid rgb(240, 240, 240); padding: 2em 2em 2em 0.7em ","fieldLayoutType":2,"labelText":"Amount","labelStyle":" width: 9%; text-align: left; font-weight: bold; border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230) ","Select_Field":true,"formCompId":"0"}],"formCompId":"-1","labelTextStyle":"font-weight: bold"}},{"type":"columns","element":{"split":"51,45,4","id":"elem_16712db6b971","elemStyle":"background-color: rgb(240, 240, 240); border-top: 1px solid rgb(230, 230, 230); border-bottom: 1px solid rgb(230, 230, 230); padding: 20px 0","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_16712db6b97","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"id":"elem_1543830248217","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","wrapperStyle":"","labelText":"Sub Total","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Select_Field":true,"formCompId":"0","labelTextStyle":"font-weight: bold; text-align: right; font-size: 16px"}},{"id":"elem_1543830248217","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","wrapperStyle":"","labelText":"Sample Tax1 (4.70%)","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Select_Field":true,"formCompId":"0","labelTextStyle":"font-weight: bold; text-align: right; font-size: 16px"}},{"id":"elem_1543830248217","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"text-align: right; font-size: 16px","fieldLayoutType":"2","wrapperStyle":"","labelText":"Total","labelStyle":"width: 75%; background-color: rgb(240, 240, 240)","Select_Field":true,"formCompId":"0","labelTextStyle":"text-align: right; font-weight: bold; font-size: 16px"}}]},{"colElements":[{"type":"text","element":{"id":"elem_16712db7c1c","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]}]}},{"type":"columns","element":{"split":"51,45,4","id":"elem_167131b0b001","elemStyle":"background-color: rgb(255, 255, 255); padding: 20px 0px","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167131b0b01","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"id":"elem_1543830248217","type":"fields","element":{"valueStyle":"width: 25%","valueTextStyle":"font-weight: bold; text-align: right; font-size: 16px","fieldLayoutType":"2","wrapperStyle":"","labelText":"Balance Due","labelStyle":"width: 75%; background-color: rgb(255, 255, 255)","Select_Field":true,"formCompId":"0","labelTextStyle":"font-weight: bold; font-size: 16px; text-align: right"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167131b1296","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_167131e09dd","fields":[],"content":"<div style=\"\"><br><br><\/div>"}},{"type":"columns","element":{"split":"3,97","id":"elem_167594f23ca1","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"elem_167594f23ca","fields":[],"content":"<div style=\"\"><p><br><\/p><\/div>"}}]},{"colElements":[{"type":"text","element":{"id":"elem_167131e8ae2","fields":[],"content":"<div style=\"\"><p><font size=\"3\"><b>Terms &amp; Conditions<\/b><\/font><\/p><p><font size=\"3\">Invoice due upon receipt. Payable within 15 business days.<\/font><\/p><\/div>"}}]}]}},{"type":"text","element":{"id":"elem_167131fe827","fields":[],"content":"<div style=\"\"><br><br>  <\/div>"}},{"type":"text","element":{"id":"elem_16713202b12","fields":[],"content":"<div style=\"\"><hr style=\"border-color: rgb(240, 240, 240)\"><\/div>"}},{"type":"text","element":{"id":"elem_1671320a380","fields":[],"content":"<div style=\"\"><br> <p style=\"text-align: center\">   <font size=\"3\"><b>Notes:<\/b>&nbsp;For any queries, please contact Harry Smith : 00-0000-0000<\/font><\/p>  <br><\/div>"}}],"id":"1"}],"resize":"A4","templateStyle":"text-align: left; width: 793.7px; margin: 0px; padding: 30px","isHeaderEnabled":false}
				}
			}
		}
		default list All_Prescriptions
		{
			displayName = "All Prescriptions"
			print template = Prescription
			show all rows from Prescription    
			(
				Doctor_name as "Doctor name"
				Doctor_name.Photo
				Age.Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Age.Email
				Medicines
				(
					field = Medicines.Medication_Name + " " + Medicines.Dosage + " " + Medicines.Duration
				)
				Date_Time as "Date-Time"
				Age1 as "Age"
				REG_No as "REG No"
				Signature
				Email
			)
			options
			(
				icon = "travel-world"
	 		)
			conditional formatting
			(
				"Prescription"
				{
				format = ""
				}
			)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Doctor_name as "Doctor name"
							Medicines.Medication_Name as "Medicines"
							Date_Time as "Date-Time"
							Age1 as "Age"
							REG_No as "REG No"
							Signature
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							REG_No as "REG No"
							Signature
							Email
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Users
		{
			displayName = "Users"
			show all rows from Prescription  [Booking_ID.Email == zoho.loginuserid]  
			(
				Age
				Booking_ID as "Booking ID"
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Date_Time as "Date-Time"
				Name1 as "Name"
				Age1 as "Age"
				sex
				Doctor_name as "Doctor name"
				REG_No as "REG No"
				Booking_ID.Doctor_details as "Doctor details"
				Age.Appointment_Date_Time as "Appointment Date Time"
				Medicines.Medication_Name as "Medicines"
			)
			options
			(
				icon = "users-2-woman"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Booking_ID as "Booking ID"
							Name1 as "Name"
							Booking_ID.Doctor_details as "Doctor details"
							Age.Appointment_Date_Time as "Appointment Date Time"
							Medicines.Medication_Name as "Medicines"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Age
							Booking_ID as "Booking ID"
							Phone_Number as "Phone"
							Date_Time as "Date-Time"
							Name1 as "Name"
							Age1 as "Age"
							sex
							Doctor_name as "Doctor name"
							REG_No as "REG No"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Home
	{
		icon = "users-2-home"
				 page Home 
	 	 { 
 	 	 displayname = "Home"

 	 	 icon = "users-2-home" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\twebDeviceConfig='{\"layout\":{\"displayType\":\"card\",\"design\":\"fluid\",\"style\":\"padding-right:0px;padding-top:0px;padding-bottom:0px;padding-left:0px;\"}}'\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"57%\"\n   \t>\n\t<search \tpaddingTop = '40px'\n\tpaddingLeft = '80px'\n\tpaddingRight = '80px'\n\tpaddingBottom = '40px'\n\tbgtype = 'none'\n\tbgColor = 'rgb(255, 255, 255)'\n\n\tshape = 'rounded'\n\tresultComponent = 'report'\n\tlinkName = 'All_Patients'\n\ttarget = 'new-window'\n\tcriteriaString = 'Booking_id == input.searchString || Email == input.searchString || Phone_Number == input.searchString || Name.first_name.contains(input.searchString)'\n\tfontFamily = 'default'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tappLinkName = 'thisapp'\n\tstyle = '4'\n\tplaceholder = 'Enter value'\n\n\n>\n<searchbar color=\"#000000\" bgColor=\"#ffffff\" bold=\"false\" italic=\"false\" fontSize=\"15px\" \/><searchbutton color=\"#ffffff\" bgColor=\"#0072F4\" bold=\"false\" italic=\"false\" fontSize=\"15px\"  \/><\/search>\n<\/column><column\n   \t\t width=\"16%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'patients'\n\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Fix Appointment'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '45.5938px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"14%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Patient1'\n\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Add Patient'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '45.5938px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"13%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Doctor_details'\n\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Add Doctor'\n\t\ttype = 'rounded'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '45.5938px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"33%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Form Data'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Booking.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Online consultation'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"33%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Form Data'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.patients.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Total Offline booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"34%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Form Data'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Lab_test.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Total Lap Test'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\t\n\ttype = 'Scatter'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'patients'\n\txfield = 'Age'\n\tyfields = 'count:Appointment_Date_Time'\n\timportedTemplate = 'false'\n\/>\n\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\t\n\ttype = 'Funnel'\n\tbgColor = 'rgb(255, 255, 255)'\n\ttheme = 'theme1'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Booking'\n\txfield = 'status'\n\tyfields = 'count:ID'\n\timportedTemplate = 'false'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Status'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tcriteriaString = 'status == &quot;Requested&quot;'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'All_Lab_Tests'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'All_Bookings'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Patients_dashboard 
	 	 { 
 	 	 displayname = "Patients dashboard"

 	 	 icon = "design-window-responsive" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'patients'\n\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Add Appointment'\n\t\ttype = 'flat'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n\t\tvAlign = 'middle'\n>\n\t<button \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n    action = 'OpenForm'\n\tcomponentLinkName = 'Booking'\n\ttarget = 'new-window'\n\tcolor = '#FFFFFF'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttext ='Book Online Consultation'\n\t\ttype = 'flat'\n\t\tbgColor = '#0072F4'\n\t\tcornerRadius = '3px' \n\/>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Users'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'false'\n            zc_DuplRec = 'false'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'All_Lab_Tests'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tcriteriaString = 'Email == zoho.loginuserid'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
				 page Doctors_Dashboard 
	 	 { 
 	 	 displayname = "Doctors Dashboard"

 	 	 icon = "health-bag-49" 
	 	 Content="<zml    \n\t\t\tisPdfEnabled='false'\n\t\t\n\t\t\tisPrintEnabled='false'\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<search \tpaddingTop = '40px'\n\tpaddingLeft = '80px'\n\tpaddingRight = '80px'\n\tpaddingBottom = '40px'\n\tbgtype = 'none'\n\tbgColor = 'rgb(255, 255, 255)'\n\n\tshape = 'flat'\n\tresultComponent = 'report'\n\tlinkName = 'All_Patients'\n\ttarget = 'new-window'\n\tcriteriaString = 'Phone_Number == input.searchString &amp;&amp; Booking_id == input.searchString'\n\tfontFamily = 'default'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tappLinkName = 'thisapp'\n\tstyle = '2'\n\tplaceholder = 'Enter Ph no Or Booking ID'\n\n\n>\n<searchbar color=\"#000000\" bgColor=\"#ffffff\" bold=\"false\" italic=\"false\" fontSize=\"15px\" \/><searchbutton color=\"#ffffff\" bgColor=\"#0072F4\" bold=\"false\" italic=\"false\" fontSize=\"15px\"  \/><\/search>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Form Data'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Doctor_details.Email == zoho.loginuserid'\n\t  value = 'thisapp.Booking.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Total Offline Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<panel \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#FFFFFF'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#FF4C2F'\n\tsize = '36px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'true' \n\titalic = 'false' \n\ttype = 'Form Data'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Doctor_details.Email == zoho.loginuserid'\n\t  value = 'thisapp.Booking.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tcolor = '#333333'\n\tsize = '16px'\n\tuppercase = 'false' \n\tunderline = 'false' \n\tbold = 'false' \n\titalic = 'false' \n\ttype = 'Text'\n\tbgColor = 'rgba(0, 0, 0, 0)'\n\n\n\n\t  \n\t  value = 'Online Booking'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Today'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tcriteriaString = 'Doctor_details.Email == zoho.loginuserid'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<report \n\t\n\timportedTemplate = 'false'\n\tappLinkName = 'thisapp'\n\tlinkName = 'Status'\n\tallowPublicAccess = 'false'\n\tisCompPublished = 'false'\n\tcriteriaString = 'docEmail == zoho.loginuserid'\n\theightType = 'auto'\n\theightValue = '700'\n\tiszreport = 'false'\n            zc_Footer = 'true'\n            zc_AddRec = 'true'\n            zc_EditRec = 'true'\n            zc_Print = 'true'\n            zc_Export = 'true'\n            zc_DelRec = 'true'\n            zc_DuplRec = 'true'\n            zc_Search = 'true'\n\/>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>" 
 	 	}
	}
	section Patients1
	{
		displayname= "Patients"
		icon = "food-candy"
		form Patient1
		{
			displayname = "Patient Reg"
			success message = "Patient Added Successfully"
			field alignment = left
			patients4
			(
				type = section
				displayname = "Patients Registration"
				visibility = true
	 			row = 1
	 			column = 0   
				width = medium
			)
			Booking_ID
			(
				type = picklist	
				displayname = "Booking ID"
				values  = patients.ID
    			displayformat = [Booking_id]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Name
			(
    			type = name
     			prefix
     			(
	     			 type = prefix
	     			 displayname ="Prefix"
	     			 visibility = false
	     			 value = {"Mr.", "Mrs.", "Ms."}
     			) 
     			first_name
     			(
	     			 type = first_name
	     			 displayname ="First Name"
     			) 
     			last_name
     			(
	     			 type = last_name
	     			 displayname ="Last Name"
     			) 
     			suffix
     			(
	     			 type = suffix
	     			 displayname ="Suffix"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Address
			(
    			type = address
     			capture_coordinates = true
     			adjust_using_map = false
     			address_line_1
     			(
	     			  type = address_line_1
	     			  displayname = "Address Line 1"
     			) 
     			address_line_2
     			(
	     			  type = address_line_2
	     			  displayname = "Address Line 2"
     			) 
     			district_city
     			(
	     			  type = district_city
	     			  displayname = "City / District"
     			) 
     			state_province
     			(
	     			  type = state_province
	     			  displayname = "State / Province"
     			) 
     			postal_Code
     			(
	     			  type = postal_Code
	     			  displayname = "Postal Code"
     			) 
     			country
     			(
	     			  type = country
	     			  displayname = "Country"
	     			 visibility = false
     			) 
     			latitude
     			(
	     			  type = latitude
	     			  displayname = "latitude"
	     			 visibility = false
     			) 
     			longitude
     			(
	     			  type = longitude
	     			  displayname = "longitude"
	     			 visibility = false
     			) 
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			must have Sex
			(
				type = radiobuttons
				maxchar = 100
				values = {"Male", "Female", "Others"}
				initial value = "Male"
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have DOB
			(
    			type = date
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Image
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 2   
				width = medium
			)
			must have Email1
			(
    			type = email
				displayname = "Email"
				maxchar = 80
	 			row = 1
	 			column = 2   
				width = medium
				personal data = true
			)
			must have Phone_Number1
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 2   
				width = medium
				personal data = true
			)
			Age
			(
    			type = formula
				value =  (((zoho.currentdate - input.DOB)) / (1000 * 3600 * 24 * 365)).round(0).toNumber()
				visibility = true
	 			row = 1
	 			column = 2   
				width = medium
			)
			Blood_Group
			(
				type = radiobuttons
				displayname = "Blood Group"
				maxchar = 100
				values = {"O positive", "O negative", "A positive", "A negative", "B positive", "B negative", "AB positive", "AB negative"}
	 			row = 1
	 			column = 2   
				width = medium
			)
			Previous_Medical_Reports
			(
				type = section
				displayname = "Previous Medical Reports"
				visibility = true
	 			row = 2
	 			column = 0   
				width = medium
			)
			File_upload
			(
    			type = upload file
				displayname = "File upload"
				browse = local_drive
	 			row = 2
	 			column = 1   
				width = medium
			)
			OCR
			(
    			type = textarea
				height = 100px
	 			row = 2
	 			column = 1   
				width = medium
						AI_Properties
						(
									fieldtype = OCR
									basefield = Image
						)
			)
			Multi_Line
			(
    			type = textarea
				displayname = "Multi Line"
				height = 100px
	 			row = 2
	 			column = 1   
				width = medium
			)
			Keyword
			(
    			type = textarea
				height = 100px
	 			row = 2
	 			column = 1   
				width = medium
						AI_Properties
						(
									fieldtype = KeywordExtractor
									basefield = Multi_Line
						)
			)
			Upload_KYC
			(
				type = section
				displayname = "Upload KYC"
				visibility = true
	 			row = 3
	 			column = 0   
				width = medium
			)
			Address_Proof
			(
    			type = upload file
				displayname = "Address Proof"
				browse = local_drive
	 			row = 3
	 			column = 1   
				width = medium
			)
			OCR1
			(
    			type = textarea
				displayname = "OCR"
				height = 100px
	 			row = 3
	 			column = 1   
				width = medium
						AI_Properties
						(
									fieldtype = OCR
									basefield = Image
						)
			)
			Insurance_Details
			(
				type = section
				displayname = "Insurance Details"
				visibility = true
	 			row = 4
	 			column = 0   
				width = medium
			)
			Insurance_ID
			(
    			type = text
				displayname = "Insurance ID"
	 			row = 4
	 			column = 1   
				width = medium
			)
			Provider
			(
				type = list	
				displayname = "Provider "
				values = {"ICICI", "AXA", "TATA AIG", "Star Health"}
				height = 60px
	 			row = 4
	 			column = 1   
				width = medium
			)
			Insurance_details1
			(
    			type = upload file
				displayname = "Insurance details"
				browse = local_drive
	 			row = 4
	 			column = 1   
				width = medium
			)
			Declaration
			(
				type = section
				visibility = true
	 			row = 5
	 			column = 0   
				width = medium
			)
			must have I_agree_Terms_and_condition
			(
    			type = checkbox
				displayname = "I agree Terms and condition"
				initial value = false
	 			row = 5
	 			column = 1   
				width = medium
			)
			must have Signature1
			(
    			type = signature
				displayname = "Signature"
	 			row = 5
	 			column = 1   
				width = medium
				personal data = true
			)
			Remarks
			(
				type = section
				visibility = true
	 			row = 6
	 			column = 0   
				width = medium
			)
			Notes
			(
    			type = textarea
				height = 100px
	 			row = 6
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "travel-spa"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Patients1
		{
			displayName = "All Patients"
			show all rows from Patient1    
			(
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Image
				Address_Proof as "Address Proof"
				File_upload as "File upload"
				OCR
				Multi_Line as "Multi Line"
				Keyword
				OCR1 as "OCR"
				Provider as "Provider "
				Insurance_details1 as "Insurance details"
				I_agree_Terms_and_condition as "I agree Terms and condition"
				Signature1 as "Signature"
				Insurance_ID as "Insurance ID"
				Phone_Number1 as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Email1 as "Email"
				DOB
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Notes
				Age
				Sex
				ID
				Booking_ID as "Booking ID"
				Blood_Group as "Blood Group"
			)
			options
			(
				icon = "travel-world"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							ID
							Name
							Age
							DOB
							Email1 as "Email"
							Phone_Number1 as "Phone"
							Sex
							Address
							Image
							Notes
							Insurance_ID as "Insurance ID"
							Address_Proof as "Address Proof"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Address
							Image
							Address_Proof as "Address Proof"
							File_upload as "File upload"
							OCR
							Multi_Line as "Multi Line"
							Keyword
							OCR1 as "OCR"
							Provider as "Provider "
							Insurance_details1 as "Insurance details"
							I_agree_Terms_and_condition as "I agree Terms and condition"
							Signature1 as "Signature"
							Insurance_ID as "Insurance ID"
							Phone_Number1 as "Phone"
							Email1 as "Email"
							DOB
							Name
							Notes
							Age
							Sex
							Booking_ID as "Booking ID"
							Blood_Group as "Blood Group"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
		list Blood_Bank
		{
			displayName = "Blood Bank"
			show all rows from Patient1    
			(
				Booking_ID as "Booking ID"
				Name 
	 			(
	      			displayformat = [first_name+""+prefix+""+last_name+""+suffix]
	 			)
				Address 
	 			(
	      			displayformat = [address_line_1+""+address_line_2+""+district_city+""+state_province+""+postal_Code+""+country]
	      			enable = Link_to_Map,Show_As_Text
	 			)
				Sex
				DOB
				Image
				Email1 as "Email"
				Phone_Number1 as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Age
				Blood_Group as "Blood Group"
				File_upload as "File upload"
				OCR
				Multi_Line as "Multi Line"
				Keyword
				Address_Proof as "Address Proof"
				OCR1 as "OCR"
				Insurance_ID as "Insurance ID"
				Provider as "Provider "
				Insurance_details1 as "Insurance details"
				I_agree_Terms_and_condition as "I agree Terms and condition"
				Signature1 as "Signature"
				Notes
			)
			options
			(
				icon = "business-bank"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							Name
							Blood_Group as "Blood Group"
							Phone_Number1 as "Phone"
							Address
							Sex
							Email1 as "Email"
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							Booking_ID as "Booking ID"
							Name
							Address
							Sex
							DOB
							Image
							Email1 as "Email"
							Phone_Number1 as "Phone"
							Age
							Blood_Group as "Blood Group"
							File_upload as "File upload"
							OCR
							Multi_Line as "Multi Line"
							Keyword
							Address_Proof as "Address Proof"
							OCR1 as "OCR"
							Insurance_ID as "Insurance ID"
							Provider as "Provider "
							Insurance_details1 as "Insurance details"
							I_agree_Terms_and_condition as "I agree Terms and condition"
							Signature1 as "Signature"
							Notes
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
	section Coupon_Codes
	{
		displayname= "Coupon Codes"
		icon = "design-code"
		form Coupon_Code
		{
			displayname = "Coupon Code"
			success message = "Coupon Code Added Successfully"
			field alignment = left
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			must have coupon_code
			(
    			type = text
				displayname = "coupon code "
	 			row = 1
	 			column = 1   
				width = medium
			)
			must have Amount
			(
				type = number
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			customize
			(
				icon = "design-code"
			)
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		default list All_Coupon_Codes
		{
			displayName = "All Coupon Codes"
			show all rows from Coupon_Code    
			(
				coupon_code as "coupon code "
				Amount
			)
			options
			(
				icon = "design-paper-dev"
	 		)
			quickview
			(
				layout
				(
		 			type = -1
					datablock1
					(
			 			layout type = -1
						fields
						(
							coupon_code as "coupon code "
							Amount
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
							record
							(
								Edit   	   
								Duplicate   	   
								Delete   	   
    						)
    			)
    			action
    			(
							on click
							(
								View Record   	   
    						)
							on right click
							(
								Edit   	   
								Delete   	   
								Duplicate   	   
								View Record   	   
    						)
     			)
			)
			detailview
			(
				layout
				(
		 			type = 1
					datablock1
					(
			 			layout type = -2
						fields
						(
							coupon_code as "coupon code "
							Amount
						)
					)
				)

				menu
    			(
    	 			header
    	 			(
    		 			Edit 
    		 			Duplicate 
    		 			Delete 
    	 			)
    			)
			)
		}
	}
		 functions
		 {
			 Deluge
			 {
				 bool CHecker(int ID, date startingTime, date endingTime)
         {
         	getStaffDetails = Doctor_details[ID == input.ID];
         	// checking whether any other appointments in between time
         	getRecords = patients[Doctor_details == input.ID && (Appointment_Date_Time >= input.startingTime && Time_upto <= endingTime) || (Appointment_Date_Time <= input.startingTime && Time_upto > input.startingTime) || (Appointment_Date_Time < input.endingTime && Time_upto > input.endingTime)].count();
         	//if any appointement is there return false
         	info getRecords;
         	if(getRecords != 0)
         	{
         		return false;
         	}
         	else
         	{
         		// else check whether the given time is applicable with the service provider or not
         		weekDays = {"","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
         		dayWeek = startingTime.getDayOfWeek();
         		get_Day_ofWeek = weekDays.get(dayWeek);
         		for each  eachr in getStaffDetails.Working_Hours
         		{
         			if(eachr.Days == get_Day_ofWeek)
         			{
         				getStartTiming = (startingTime.toDate() + " " + eachr.From.substring(0,5) + ":00 " + eachr.From.substring(6)).toTime();
         				getFinishTiming = (startingTime.toDate() + " " + eachr.To.substring(0,5) + ":00 " + eachr.To.substring(6)).toTime();
         			}
         		}
         		// 		Check with the staff availability, on the booking date where the staff has working schedule
         		if(getStartTiming <= startingTime && getFinishTiming > startingTime)
         		{
         			return true;
         		}
         		else
         		{
         			return false;
         		}
         	}
         }
			 }
		 }




		workflow
		{
		form
		{
			online as "online"
			{
				type =  form
				form = Booking
				record event = on add

				on validate
				{
				}

			}
			load as "load"
			{
				type =  form
				form = Lab_test
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Complete_Blood_Count;
										hide Differential_Leucocyte_Count;
										hide Common1;
						)
					}
				}

			}
			blood as "blood"
			{
				type =  form
				form = Lab_test
				record event = on add

				on user input of Type_of_test
				{
					actions 
					{
						custom deluge script
						(
											show Differential_Leucocyte_Count;
										show Absolute_Leucocyte_Count;
										show Complete_Blood_Count;
						)
					}
				}

			}
			age as "age"
			{
				type =  form
				form = Lab_test
				record event = on add or edit

				on load
				{
				}

			}
			Date_format as "Date format"
			{
				type =  form
				form = Booking
				record event = on add or edit

				on validate
				{
				}

			}
			autopo as "autopo"
			{
				type =  form
				form = Patient1
				record event = on add

				on user input of Phone_Number1
				{
					actions 
					{
						custom deluge script
						(
											getpatientsDetails = patients[Phone_Number == input.Phone_Number1];
										input.Email1 = getpatientsDetails.Email;
										input.Name = getpatientsDetails.Name;
										input.DOB = getpatientsDetails.DOB_patients;
										Sex.select(getpatientsDetails.Sex);
						)
					}
				}

			}
			Email_update as "Email update"
			{
				type =  form
				form = Patient1
				record event = on add or edit

				on user input of Email1
				{
					actions 
					{
						custom deluge script
						(
											if(Phone_Number1 == null)
										{
											getpatientsDetails = patients[Email == input.Email1];
											input.Phone_Number1 = getpatientsDetails.Phone_Number;
											input.Name = getpatientsDetails.Name;
											input.DOB = getpatientsDetails.DOB_patients;
											input.Sex = getpatientsDetails.Sex;
										}
						)
					}
				}

			}
			Email_update1 as "Email update"
			{
				type =  form
				form = Booking
				record event = on add or edit

				on user input of Doctor_details
				{
					actions 
					{
						custom deluge script
						(
											if(Doctor_details != null)
										{
											emaildetail = Doctor_details[ID == input.Doctor_details];
											input.docEmail = emaildetail.Email;
											input.Payment = emaildetail.Fess;
											show Payment;
											disable Payment;
											show Apply_Coupon_Code;
										}
						)
					}
				}

			}
			Hide_fields as "Hide fields"
			{
				type =  form
				form = Booking
				record event = on add

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Prescription;
										hide Payment;
										hide docEmail;
										hide status;
										hide Date_field;
										hide Apply_Coupon_Code;
						)
					}
				}

			}
			Apply_Coupon_Code as "Apply Coupon Code"
			{
				type =  form
				form = Booking
				record event = on add or edit

				on user input of Apply_Coupon_Code
				{
					actions 
					{
						custom deluge script
						(
											if(Apply_Coupon_Code != null)
										{
											coupon = Coupon_Code[coupon_code == input.Apply_Coupon_Code];
											input.Payment = input.Payment - coupon.Amount;
											disable Apply_Coupon_Code;
										}
										else
										{
											alert "Invalid coupon code";
										}
						)
					}
				}

			}
			Booking_ID as "Booking ID"
			{
				type =  form
				form = Patient1
				record event = on add or edit

				on user input of Booking_ID
				{
					actions 
					{
						custom deluge script
						(
											if(Booking_ID != null)
										{
											getpatientsDetails = patients[ID == input.Booking_ID];
											input.Phone_Number1 = getpatientsDetails.Phone_Number;
											input.Name = getpatientsDetails.Name;
											input.DOB = getpatientsDetails.DOB_patients;
											input.Sex = getpatientsDetails.Sex;
											input.Email1 = getpatientsDetails.Email;
										}
						)
					}
				}

			}
			Auto_Update_using_PH_no as "Auto Update using PH no"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on user input of Phone_Number
				{
					actions 
					{
						custom deluge script
						(
											if(Phone_Number != null)
										{
											getpatientsDetails = Patient1[Phone_Number1 == input.Phone_Number];
											input.Name1 = getpatientsDetails.Name;
											input.Age1 = getpatientsDetails.Age;
											input.sex = getpatientsDetails.Sex;
											input.Email = getpatientsDetails.Email1;
										}
						)
					}
				}

			}
			Booking_ID_auto_update as "Booking ID auto update"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on user input of Booking_ID
				{
					actions 
					{
						custom deluge script
						(
											if(Booking_ID != null)
										{
											getpatientsDetails = patients[ID == input.Booking_ID];
											input.Name1 = getpatientsDetails.Name;
											input.Age1 = getpatientsDetails.Age;
											input.sex = getpatientsDetails.Sex;
											input.Email = getpatientsDetails.Email;
										}
						)
					}
				}

			}
			Auto_update_Doctor_detail as "Auto update Doctor details"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on user input of Doctor_name
				{
					actions 
					{
						custom deluge script
						(
											if(Doctor_name != null)
										{
											getpatientsDetails = Doctor_details[ID == input.Doctor_name];
											input.REG_No = getpatientsDetails.Registration_No;
										}
						)
					}
				}

			}
			Hide as "Hide"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Age;
						)
					}
				}

			}
			Show_Time as "Show Time"
			{
				type =  form
				form = patients
				record event = on add or edit

				on user input of Doctor_details
				{
					actions 
					{
						custom deluge script
						(
											hide Time;
										if(input.Doctor_details != null)
										{
											show Time;
											getStaffDetails = Doctor_details[ID == input.Doctor_details];
											weekDays = {"Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"};
											counter = 0;
											str = "<table style='width:30em; font-size:19px; text-align:center;' cellspacing='5'>";
											for each  eachtiming in getStaffDetails.Working_Hours
											{
												str = str + "<tr style='border-radius:50px;line-height:2; border-collapse:collapse;color:#fc5f74;'><th>" + eachtiming.Days + "</th><td style=';background:white;'>" + eachtiming.From + "</td> <td style='background:white;color:#8f8f8f;'> - </td> <td style='background:white;'>" + eachtiming.To + "</td></tr>";
												counter = counter + 1;
											}
											str = str + "</table>";
											input.Time = "<div>" + str + "</div>";
										}
						)
					}
				}

			}
			Patient as "Patient"
			{
				type =  form
				form = Lab_test
				record event = on add or edit

				on user input of Patient_Name
				{
					actions 
					{
						custom deluge script
						(
											if(Patient_Name != null)
										{
											collection = Patient1[ID = input.Patient_Name];
											input.Age = collection.Age;
											input.Email = collection.Email1;
											input.Phone_Number = collection.Phone_Number1;
											input.sex = collection.Sex;
										}
						)
					}
				}

			}
			Send_PDF as "Send PDF"
			{
				type =  form
				form = Lab_test
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Your Lab Report"
											message :"<div>Here Is your Report&nbsp;</div>"
											Attachments :template:Lap_Report as PDF
										]
						)
					}
				}

			}
			Send_PDF1 as "Send PDF"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on success
				{
					actions 
					{
						custom deluge script
						(
											sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Your prescription"
											message :"Find your attachment<div><br></div>"
											Attachments :template:Prescription as PDF
										]
						)
					}
					actions 
					{
						custom deluge script
						(
											sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Your prescription"
											message :"Find your attachment<div><br></div>"
											Attachments :template:Prescription as PDF
										]
						)
					}
					actions 
					{
						custom deluge script
						(
											sendmail
										[
											from :zoho.adminuserid
											to :input.Email
											subject :"Your Prescription"
											message :"<div>You&nbsp;<span style=\"color: rgb(57, 135, 217); font-family: Lato, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: 0.1px; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(244, 249, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">Prescription</span></div>"
											Attachments :template:Prescription as PDF
										]
						)
					}
				}

			}
			Thank_You_Message as "Thank You Message"
			{
				type =  form
				form = Booking
				record event = on add or edit

				on success
				{
					actions 
					{
						success message "Thank You \n ${Doctor_details} will Contact You Shortly ";
					}
				}

			}
			Hide_fields1 as "Hide fields"
			{
				type =  form
				form = patients
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											hide Time_upto;
						)
					}
				}

			}
			checking as "checking"
			{
				type =  form
				form = patients
				record event = on add or edit

				on validate
				{
					actions 
					{
						custom deluge script
						(
											if(Doctor_details != null)
										{
											input.Time_upto = input.Appointment_Date_Time.addMinutes(15);
											if(!thisapp.CHecker(input.Doctor_details,input.Appointment_Date_Time,input.Time_upto))
											{
												alert "please choose alternative time";
												cancel submit;
											}
										}
						)
					}
				}

			}
			Thank_You as "Thank You"
			{
				type =  form
				form = patients
				record event = on add or edit
					status = inactive

				on success
				{
					actions 
					{
						success message "Your Booking  is Confirmed and your Booking ID is  ${Booking_id}\n";
					}
				}

			}
			Auto_Update_using_PH_no1 as "Auto Update using PH no"
			{
				type =  form
				form = Lab_test
				record event = on add or edit

				on user input of Phone_Number
				{
					actions 
					{
						custom deluge script
						(
											if(Patient_Name == null)
										{
											collection = Patient1[Phone_Number1 = input.Phone_Number];
											input.Age = collection.Age;
											input.Email = collection.Email1;
											input.Patient_Name = collection.ID;
											input.sex = collection.Sex;
										}
						)
					}
				}

			}
			Auto_Doc_Update as "Auto Doc Update"
			{
				type =  form
				form = Prescription
				record event = on add or edit

				on load
				{
					actions 
					{
						custom deluge script
						(
											getpatientsDetails = Doctor_details[Email == zoho.loginuserid];
										input.REG_No = getpatientsDetails.Registration_No;
										input.Doctor_name = getpatientsDetails.ID;
						)
					}
				}

			}
		}



		approval
		{
			Online_Consultation as "Online Consultation"
			{
				type =  approval
				form = Booking[status == "Attending"]
				display fields = [Name,Email,Symptom,Sex,Phone_Number,status]
				on start
				{
				}
				on level 1
				{
					approvers
					(
		 				role = "CEO"
					)
					on approve 
					{
						actions 
						{
							sendmail
							(
								from : zoho.loginuserid
								to : approver.submitter
								subject : "Approval Request"
								message : "Your request has been approved."
							)
						}
						actions 
						{
						on load
						(
							date = zoho.currentdate.addMinutes(15);
												input.Date_field = date.toString("MMM") + "" + date.toString("D") + "" + date.toString("h") + "" + date.toString("YYYY") + "" + date.toString("a");
						)
						}
					}
					on reject
					{

						actions 
						{
							sendmail
							(
								from : zoho.loginuserid
								to : approver.submitter
								subject : "Approval Request"
								message : "Your request has been rejected."
							)
						}
					}
				}
			}
		}

		blueprint
		{
    			online as "online"
    			{
        			type = Blueprint
        			form = Booking[-|-139792000000004822-|- == "Online"]
        			status = inactive
        			start
        			{
        			}
        			stages
        			{
        			}
        			transitions
        			{
        			}
    			}
    			online1 as "online"
    			{
        			type = Blueprint
        			form = Booking
        			status = inactive
        			start
        			{
        			}
        			stages
        			{
        			}
        			transitions
        			{
        			}
    			}
		}

		functions
		{
			Change_Status as "Change Status"
			{
				type =  functions
				form = Booking
				on start
				{
					actions 
					{
					update Booking[ID == input.ID]
					[
							status = "Attending"
					]
					}
				}
			}
			consultation as "consultation"
			{
				type =  functions
				form = Booking
				on start
				{
					actions 
					{
					update Booking[ID == input.ID]
					[
							status = "Done"
					]
					}
				}
			}
			Close_Online as "Close Online"
			{
				type =  functions
				form = Booking
				on start
				{
				}
			}
			Close_Online1 as "Close Online"
			{
				type =  functions
				form = Booking
				on start
				{
				}
			}
			close_consulation as "close consulation"
			{
				type =  functions
				form = Booking
				on start
				{
					actions 
					{
					update Booking[ID == input.ID]
					[
							status = "Done"
					]
					}
				}
			}
			Prescription_status as "Prescription status"
			{
				type =  functions
				form = Booking
				on start
				{
					actions 
					{
					update Booking[ID == input.ID]
					[
							Prescription = "Created"
					]
					}
				}
			}
			status_change as "status change"
			{
				type =  functions
				form = Booking
				on start
				{
					actions 
					{
					update Booking[ID == input.ID]
					[
							Prescription = "Shared"
					]
					}
				}
			}
			goto_form as "goto form"
			{
				type =  functions
				form = Prescription
				on start
				{
				}
			}
			jgjk as "jgjk"
			{
				type =  functions
				form = Prescription
				on start
				{
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Doctor"
			{
				name = "Doctor"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Doc\n"
				ModulePermissions
				{
					Prescription
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Prescriptions={"View","Edit"}
							Users={"View","Edit"}
						}
					}
					Disease
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Diseases={"View","Edit"}
						}
					}
					Doctor_details
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Lab_test
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							All_Lab_Tests={"View","Edit"}
							Today1={"View","Edit"}
						}
					}
					Coupon_Code
					{
						allFieldsVisible= true 
					}
					patients
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Today_Appointments={"View","Edit"}
							All_Patients={"View","Edit"}
						}
					}
					Reports
					{
						allFieldsVisible= true 
					}
					Booking
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Status={"View","Edit"}
							Today={"View","Edit"}
							Status1={"View","Edit"}
							All_Bookings={"View","Edit"}
						}
					}
					Patient1
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Blood_Bank={"View","Edit","Delete"}
							All_Patients1={"View","Edit","Delete"}
						}
					}
					Doctors_Dashboard
					{
						enabled = tab
					}
				}
			}
			"patient"
			{
				name = "patient"
				type = Users_Permissions
				permissions = {Chat:false, Predefined:false, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "patient\n"
				ModulePermissions
				{
					Prescription
					{
						allFieldsVisible= true 
					}
					Disease
					{
						allFieldsVisible= true 
					}
					Doctor_details
					{
						allFieldsVisible= true 
					}
					Lab_test
					{
						enabled= Create,Tab 
						ReportPermissions
						{
							Lap_Test_Patient={"View"}
						}
						FieldPermissions
						{
							Email{visibility:true,readonly:false}
							Report_Status{visibility:true,readonly:false}
							Doctor_details{visibility:true,readonly:false}
							sex{visibility:true,readonly:false}
							Date_field1{visibility:true,readonly:false}
							Phone_Number{visibility:true,readonly:false}
							Section{visibility:false,readonly:false}
							Differential_Leucocyte_Count{visibility:true,readonly:false}
							Date_field{visibility:true,readonly:false}
							Staff_Sign{visibility:false,readonly:false}
							Type_of_test{visibility:true,readonly:false}
							File_upload{visibility:true,readonly:false}
							Complete_Blood_Count{visibility:true,readonly:false}
							Signature{visibility:false,readonly:false}
							Report_Date{visibility:true,readonly:false}
							Common1{visibility:true,readonly:false}
							ID{visibility:false}
							Absolute_Leucocyte_Count{visibility:true,readonly:false}
							Collection_Date{visibility:true,readonly:false}
							Age{visibility:true,readonly:false}
							Patient_Name{visibility:true,readonly:false}
						}
					}
					Coupon_Code
					{
						allFieldsVisible= true 
					}
					patients
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
					}
					Reports
					{
						allFieldsVisible= true 
					}
					Booking
					{
						enabled= Create,Tab 
						allFieldsVisible= true 
						ReportPermissions
						{
							Online_patient={"View","Edit"}
						}
					}
					Patient1
					{
						allFieldsVisible= true 
					}
					Patients_dashboard
					{
						enabled = tab
					}
				}
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
					"Doctor"
					{
						description = "Doctor Page"
						"Patients"
						{
							description = "patient "
						}
					}
				}
			}
	}

	customize
	{
		
		layout = "tab"
		color = "black"
		base theme = "professional"
		new theme = 3
		new theme color = 1
		icons = true
		icons style = outline
	}


	
}
